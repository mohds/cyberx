# CyberX 2018 - PF rules. 12 April 2018

# includes

# tables
table <oz> persist file "/etc/pf/tables/oz"
table <admins> persist file "/etc/pf/tables/admins"
table <services> persist file "/etc/pf/tables/services"
table <web_whitelist> persist file "/etc/pf/tables/web_whitelist"
table <rz> persist file "/etc/pf/tables/rz"
table <injects> persist file "/etc/pf/tables/injects"
table <black_list> persist file "/etc/pf/tables/black_list"

# Macros
## Proxy
proxy1 = "192.168.39.2"
proxy1_6 = "fd00:a:6500:1120::2"
proxy1_if = "vlan1120"
proxy2 = "192.168.41.2"
proxy2_6 = "fd00:a:6500:1121::2"
proxy2_if = "vlan1121"

## Services Servers
web_server = "{ 192.168.43.2 fd00:a:6500:1138::2}"
web_server_inj = "{192.168.89.2 fd00:a:6500:1195::2}"
dns_int_server = "{192.168.35.2 fd00:a:6500:1135::2}"
dns_ext_server = "{192.168.34.2 fd00:a:6500:1132::2 }"
dc_server = "{192.168.33.2 fd00:a:6500:1160::2}"
mail_server = "{192.168.30.2 fd00:a:6500:1130::2}"
ntp_server = "{192.168.38.2 fd00:a:6500:1136::2}"
ftp_server = "{192.168.32.2 fd00:a:6500:1131::2}"

## Services Interfaces
web_if = "vlan1138"
dns_int_if = "vlan1135"
dns_ext_if = "vlan1132"
dc_if = "vlan1160"
mail_if = "vlan1130"
ntp_if = "vlan1136"
ftp_if = "vlan1131"
PAZ_if = "{" $web_if $dns_int_if $dns_ext_if $dc_if $mail_if $ntp_if $ftp_if "}"

## Restricted Zone 
SWAD_server = "192.168.45.2"
tap_server = "192.168.44.2"
IDS = "192.168.31.2"
IPS = "192.168.3.2"
admin_server = "192.168.112.2" # Maxime's admin box
SWAD_if = "vlan1151"
tap_if = "vlan1122"
ids_if = "vlan1123"
WebIPS = "{192.168.37.2 192.168.36.2}"
RZ_if = "{" $tap_if $SWAD_if $ids_if "}"

## Operations Zone
alpha = "192.168.20.2 fd00:a:6500:1192::2"
beta = "192.168.20.3 fd00:a:6500:1193::2"
alpha_if = "vlan1192"
beta_if = "vlan1193"
delta_if = "vlan1190"
gamma_if = "vlan1191"
oz_if = "vether0"
oz_combined = "{" $alpha_if $beta_if $delta_if $gamma_if  "}"
allowed_oz_ports = "{7, 20, 21, 22, 53, 80, 110, 123, 137, 138, 139, 143, 161, 220, 389, 443, 445, 585, 993, 995, 1433, 1434, 3306, 3389, 5004, 5060, 5061, 5298, 8080}" # ports allowed to be open between oz stations
blocked_oz_ports_out = "{25, 80, 143, 220, 585, 993, 995, 5298, 6667}" # ports to block outside of OZ

# networks
int_net = "{192.168.0.0/16 fd00:a:6500::/48}"
ext_net = "{10.0.0.0/8 fd00:a::/32}"
mynet = "{192.168.200.0/30}" # test

token_agent = "10.10.0.11"
tcp_services = "{ssh, http}"
ext_if = "vlan1124"
admin_if = "vlan110"
ayesha_station = "192.168.109.2"
IRC_undergrad = "10.102.0.10"
rubberneck_server = "10.10.0.10"

# injects
CSAP_server = "192.168.91.2" 
CSAP_if = "vlan1197"
IRC_server = "{192.168.170.2 fd00:a:6500:1194::2}" 
IRC_if = "vlan1194"
fac_lap = "192.168.90.2"
fac_lap_if = "vlan1196"
inject_if = "vlan111" # team lead laptops

# Rules

## FUCK SHIT
#block in quick from {<oz>}
#block in quick on $ext_if to $CSAP_server

## default

anchor "DEFAULT-BLOCK"{
  block all
}

anchor "DEFAULT-PASS" {
  #pass log all
  pass in log all
}

## ICMP
anchor "PING" {
  pass out log proto icmp
  pass out proto icmp6
}

## testing server
block out from $mynet
pass out proto tcp from $mynet to port $tcp_services keep state

anchor "WEB" {
  # Token agent traffic 
  # added by andrew

  # pass in quick log on { $oz_if $mail_if $ftp_if $web_if $dc_if $dns_ext_if $dns_int_if } proto tcp from { <services> <oz> } to ? port https tag bypassproxy

  ## Web proxy
  pass in log on $ext_if proto tcp to {$web_server $ext_net} port {www https} route-to ( $proxy1_if $proxy1) 
  pass in log on {$inject_if $oz_if $admin_if} inet proto tcp from {<injects> <oz> <admins>} to {$web_server $ext_net } port {www https} route-to ($proxy1_if $proxy1)  
 
  pass in on {$CSAP_if vlan1195 $oz_if $admin_if} inet proto tcp to $token_agent port 443
    ### IPv6
  #pass in quick log on $ext_if inet6 proto tcp to {$web_server $ext_net} port {www https} route-to ($proxy1_if $proxy1_6)
  #pass in quick log on {$oz_if $admin_if} inet6 proto tcp from fd00:a:6500:a109::2 to {$web_server $ext_net} port {www https} route-to ($proxy1_if $proxy1_6)
  
  pass out log on $proxy1_if inet proto tcp to {$web_server $ext_net} port {www https} 
   
  ## Web Server
  pass out log on $ext_if proto tcp from {$proxy2 $proxy2_6} to {$ext_net} port {www https}
  #pass out log on $ext_if proto tcp from {<oz>} to {<web_whitelist>} port {www https} keep state
  pass out log on $web_if proto tcp from {$proxy2 $proxy2_6} to {$web_server} port {www https}

  ## Bypass Proxy
  #pass out log on $web_if inet proto tcp from {<admins> <oz> $ext_net} to $web_server port {www https}
  #pass out log on $ext_if proto tcp from {<oz> <admins> <injects>} to $ext_net port {www https} keep state
  pass out log on $web_if inet6 proto tcp from {<injects> <admins> <oz> $ext_net} to $web_server port {www https}
  pass out log on $ext_if inet6 proto tcp from {<oz> <admins> <injects>} to $ext_net port {www https} keep state
  pass out log on $ext_if inet proto tcp from {<injects> <admins> <oz>} to $ext_net port 8080 keep state
  pass out log on $ext_if inet6 proto tcp from $web_server to $ext_net port {www https}
  
  pass out log on $ext_if inet proto tcp from $web_server_inj to $ext_net port {www https} 
  pass in log on {$admin_if $inject_if $oz_if } inet proto tcp from {<injects> <oz> <admins>} to {$web_server_inj} port {www https}
  pass out log on vlan1195 proto tcp to $web_server_inj port {www https} 
  pass out on $ext_if proto tcp to $token_agent port {80 443}

  pass in log on $ext_if inet proto tcp to $CSAP_server port {www https}
  pass out log on $CSAP_if inet proto tcp to $CSAP_server port {www https}  
}

anchor "ftp-proxy/*"
anchor "FTP" {
  ## FTP
  pass in quick log on $ext_if inet proto tcp to $ftp_server port ftp divert-to 127.0.0.1 port 8021
  pass in quick log on {$oz_if $fac_lap_if} inet proto tcp to {$ftp_server $ext_net} port ftp divert-to 127.0.0.1 port 8021
  pass in quick log on {$admin_if $dc_if $ext_if} inet proto tcp to {$ftp_server} port ftp divert-to 127.0.0.1 port 8021
  pass out log on $ext_if inet proto tcp from (self) to $ext_net port ftp keep state
  pass out log on $ftp_if inet proto tcp from (self) to $ftp_server port ftp

  pass in quick log on  $admin_if inet proto tcp from 192.168.101.2 to $web_server port {ftp 60000:60005}
  pass out quick log on $web_if inet proto tcp to $web_server port {ftp 60000:60005} 

  #IPv6
  pass in quick log on $ext_if inet6 proto tcp to $ftp_server port ftp divert-to ::1 port 8021
  pass in quick log on {$oz_if} inet6 proto tcp to {$ftp_server} port ftp
  pass in quick log on {$admin_if $dc_if $ext_if} inet6 proto tcp to {$ftp_server} port ftp divert-to ::1 port 8021
  pass out log on $ext_if inet6 proto tcp from (self) to $ext_net port ftp keep state
  pass out log on $ftp_if inet6 proto tcp from {<oz>} to $ftp_server port ftp 

}

anchor "UAV" {

 #pass in log on $oz_if inet proto udp to 10.50.101.0/24 port {5001 5550}

 pass out log on $ext_if inet proto tcp from {192.168.20.2 192.168.20.3} to 10.50.101.0/24 port 22

}

 
anchor "DNS" {
  ## DNS
  ### Internal/External DNS to External Network
  pass out log on $ext_if inet proto {tcp udp} from {$dns_int_server $dns_ext_server} to $ext_net port domain keep state

  ### access to ext_dns
  pass out log on $dns_ext_if inet proto {tcp udp} from {$ext_net $dc_server} to $dns_ext_server port domain

  ### access to int_dns
  pass out log on $dns_int_if inet proto {tcp udp} from {$CSAP_server $fac_lap $web_server_inj $IRC_server <injects> <oz> <admins> <services>} to $dns_int_server port domain

  pass out log on $dns_int_if inet6 proto {tcp udp} from {$IRC_server <injects> <oz> <admins> <services>} to $dns_int_server port domain

}

anchor "NTP" {
  ## NTP
  pass out log on {$ntp_if} inet proto udp from {$IDS <oz> <admins> <services>} to {$ntp_server} port ntp
  pass out log on $ext_if inet proto udp from {$IPS $ntp_server} to $ext_net port ntp keep state
}

anchor "MAIL" {
  ## Mail
  ### pass to mail server from external network and OZ
  pass out log on $mail_if inet proto tcp from {$ext_net $web_server <admins> <oz> <injects>} to $mail_server port {smtp imap}

  ### pass to external network mail protocols
  pass out log on $ext_if inet proto tcp to $ext_net port {smtp imap} keep state

  pass out log on $mail_if inet proto tcp from 172.16.0.1 to $mail_server port {smtp imap}
}

anchor "SSH" {
  ## SSH
  pass in log on $admin_if inet proto tcp to port 22 tag ssh_admin

  pass in log on $SWAD_if inet proto tcp to $tap_server port ssh tag ssh_admin
  pass out log on $RZ_if tagged ssh_admin
  pass out log on $PAZ_if tagged ssh_admin
  pass out log on {$proxy1_if $proxy2_if} tagged ssh_admin
  pass out log on $ext_if inet proto tcp to {$int_net 10.101.0.0/24} tagged ssh_admin
  pass out log on {$oz_if $alpha_if $beta_if $delta_if $gamma_if} tagged ssh_admin
  
  # Inject Web server (FACServ)
  pass in log on $ext_if inet proto tcp to $web_server_inj port 22 tag ssh_admin
  pass out log on $ext_if from $web_server_inj tagged ssh_admin 

  # Inject Web Server (CSAPServer)
  pass in log on $ext_if inet proto tcp to $CSAP_server port 22 tag ssh_admin
  pass out log on $CSAP_if inet proto tcp to $CSAP_server port 22 tagged ssh_admin
}

### ADDED BY ANDREW - update macros to accomodate inject server
irc_if = vlan1194
anchor "IRC" {

  # allow operations, simnet, and admins to access irc server
  #pass out log on $irc_if inet proto tcp from {<oz> $ext_net <admins>} to 192.168.170.2 port 6667

  pass out log on $irc_if inet proto tcp from {$ext_net <injects> <oz> <admins>} to $IRC_server port 6667
  pass out log on $ext_if inet proto tcp from <oz> to $IRC_undergrad port 6667
  pass out log on $ext_if inet proto tcp from <injects> to $IRC_undergrad port 6667
  
  # IPv6
  pass out log on $irc_if inet6 proto tcp from {$ext_net <injects> <oz> <admins>} to $IRC_server port 6667
  #pass out log on $ext_if inet6 proto tcp from <oz> to $IRC_undergrad port 6667
  #pass out log on $ext_if inet6 proto tcp from <injects> to $IRC_undergrad port 6667
}



anchor "OPS" {
  pass in log on $oz_if inet proto {tcp udp} to <oz> port $allowed_oz_ports tag allow_oz 
  pass in log on $oz_if inet6 proto tcp to <oz> port $allowed_oz_ports tag allow_oz 
  pass out log on $oz_if tagged allow_oz
  pass out log on $oz_if inet6 proto {tcp udp} tagged allow_oz
   
  pass out log on {$alpha_if $beta_if } proto tcp from {<oz>} to port ssh
  pass out log on {$delta_if $gamma_if} proto tcp from {<oz>} to port rdp
  
  # grey interface rule 
  pass out log on {$alpha_if $beta_if $delta_if $gamma_if} inet proto tcp to port 5672
 
  pass out log on $ext_if inet proto {tcp udp} to port {5672}
  pass out log on $ext_if inet proto {tcp udp} to $rubberneck_server port 80 

  block in log on $oz_if inet proto tcp from {$alpha $beta} to port $blocked_oz_ports_out
  block in log on $oz_if inet6 proto tcp from {$alpha $beta} to port $blocked_oz_ports_out
  block in log on $oz_if inet proto udp from {$alpha $beta} to port {220 995 5298}
  block in log on $oz_if inet6 proto udp from {$alpha $beta} to port {220 995 5298}
  pass in on $oz_if proto tcp to $rubberneck_server port 80  

}

anchor "ADMIN" {
  # mattermost chat
  pass out log on {$admin_if} inet proto tcp from {<admins>} to 192.168.115.2 port 8065

  # honeynet monitoring channel

  # kibana dashboards
  pass out log on $admin_if inet proto tcp from {<admins>} to {$admin_server} port { 5601 5636 }

  # ids/ips logging
  pass out log on $admin_if inet proto tcp from {$IDS $IPS $WebIPS} to $admin_server port { 9205:9208 }

  # repo access
  pass out log on $admin_if inet proto tcp from { self <admins> <services> $WebIPS} to 192.168.115.2 port {www}

  # RDP
  pass out log on { $oz_if $delta_if $gamma_if } inet proto tcp from {<admins>} to port rdp
  pass out log on $dc_if inet proto tcp from {<admins>} to $dc_server port rdp

  # nfsen
  pass out log on $tap_if inet proto tcp from {<admins>} to $tap_server port www

  # NFS
  pass out log on $tap_if inet proto {tcp udp} from  {<admins>} to $tap_server port {638 942 nfs 111 955 843 968 1000 2049}
  pass out log on $SWAD_if inet proto {tcp udp} from $tap_server to $SWAD_server
  pass out log on $tap_if inet proto {tcp udp} from {$admin_server 192.168.113.2 192.168.114.2 $SWAD_server} to $tap_server

}

anchor "DC" {
  pass out log on $dc_if inet6 proto {tcp udp} from {<oz>} to $dc_server port {ntp kerberos netbios-ns netbios-dgm netbios-ssn bootps epmap ldap ldaps microsoft-ds kpasswd rdp domain smtp 2535 3268 3269 5722 9389 1025:5000 49152:65535}
  pass out log on $dc_if proto {tcp udp} from {<oz>} to $dc_server port {ntp kerberos netbios-ns netbios-dgm netbios-ssn bootps epmap ldap ldaps microsoft-ds kpasswd rdp domain smtp 2535 3268 3269 5722 9389 1025:5000 49152:65535}
  pass out log on $dc_if inet6 proto tcp from $dns_int_server to port {636 389}
  pass out log on $oz_if inet6 proto tcp from $dc_server to {<oz>} port 5985
  pass out log on $dc_if inet6 proto tcp from {<oz>} to $dc_server port 5985
  pass out log on $ext_if inet6 proto tcp from $dc_server to $ext_net port {www https} keep state

  pass out log on $dc_if inet proto tcp from $dns_int_server to port {636 389}
  pass out log on $oz_if inet proto tcp from $dc_server to {<oz>} port 5985
  pass out log on $dc_if inet proto tcp from {<oz>} to $dc_server port 5985
  pass out log on $ext_if inet proto tcp from $dc_server to $ext_net port {www https} keep state
}

anchor "FACserv" {
  pass out log on vlan1195 inet proto {tcp udp} from {$fac_lap $ext_net}to $web_server_inj port 4565 
  pass out log on vlan1195 inet proto {tcp udp} from 192.168.108.2 to $web_server_inj
}

anchor "BLACK" {
  block on $ext_if to <black_list>
  block on $ext_if from <black_list>
}
